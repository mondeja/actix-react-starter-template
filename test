#!/usr/bin/env sh

: '
  Script that tests the application.

  Environment variables (default values):

  - RELEASE: If not empty, build code for production environment.
  - TESTS (server,client): If not empty, only test specified parts of the
      application, separated by commas. Use "server" to test Rust ACTIX server
      and "client" to test React UI client.
  - RECREATE: If not empty, recreate from scratch the specified environment
      compilations. Accept a comma separated string, being "server" and
      "client" the possible values.
  - SOURCING: If not empty, the main entry point of the script will not be
      executed, so you can source it.
'

_DEV_CLIENT_RECREATED=0

configure_script() {
  set -e

  if [ -z "$TESTS" ]; then
    TESTS="server,client"
  fi

  TESTS_FAILED=0
}

info() {
  printf "[INFO] %s\n" "$1"
}

test_server() {
  if ! printf "%s" "$TESTS" | grep -q "server"; then
    return
  fi

  if printf "%s" "$RECREATE" | grep -q "server"; then
    rm -rf target
  fi

  msg="Running"
  if [ -z "$RELEASE" ]; then
    msg="$msg development"
  else
    msg="$msg production"
  fi
  msg="$msg server tests..."
  info "$msg"

  if [ ! -d "client/build" ]; then
    SOURCING=1 . ./run
    RECREATE="$RECREATE" RELEASE="$RELEASE" build_client

    # client is recreated, don't build it again on server tests
    _DEV_CLIENT_RECREATED=1
  fi

  if [ -z "$RELEASE" ]; then
    cargo test || TESTS_FAILED=1
  else
    cargo test --release || TESTS_FAILED=1
  fi
}

test_client() {
  if ! printf "%s" "$TESTS" | grep -q "client"; then
    return
  fi

  # build client
  if [ "$_DEV_CLIENT_RECREATED" -eq 0 ]; then
    SOURCING=1 . ./run
    RECREATE="$RECREATE" RELEASE="$RELEASE" build_client
  fi

  msg="Running"
  if [ -z "$RELEASE" ]; then
    msg="$msg development"
  else
    msg="$msg production"
  fi
  msg="$msg client tests..."
  info "$msg"

  cd client
  node_modules/.bin/jest || TESTS_FAILED=1
  cd ..
}

clean_exit() {
  if [ "$TESTS_FAILED" -eq 1 ]; then
    exit 1
  fi
}

main() {
  configure_script
  test_server
  test_client
  clean_exit
}

if [ -z "$SOURCING" ]; then
  main
fi
